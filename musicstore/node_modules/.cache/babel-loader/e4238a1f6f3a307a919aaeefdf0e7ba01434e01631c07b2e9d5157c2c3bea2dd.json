{"ast":null,"code":"import getOrderCommodity from '@/api/orderCommodity';\n// import getOrderNumber from '@/api/order';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'PerOrder',\n  data() {\n    return {\n      address: '',\n      confromAddress: ''\n    };\n  },\n  computed: {\n    ...mapState('user', ['payedShoppingCart', 'order'])\n  },\n  methods: {\n    deletePayedShoppingCart(number) {\n      this.$confirm('确定要删除这个订单吗', '删除提示', {\n        type: 'warning'\n      }).then(() => {\n        this.$store.dispatch('user/deletePayedShoppingCart', number);\n      }).catch(() => {\n        return 0;\n      });\n    }\n  },\n  async created() {\n    this.confromAddress = JSON.parse(sessionStorage.getItem('address'));\n    this.address = this.$store.state.user.address.find(item => item.id == this.confromAddress);\n    // await getOrderNumber().then(res=>{\n    //   let orderArr = []\n    //   res.data.forEach(e=>{\n    //     orderArr.push(e.order_sn)\n    //   })\n    //   this.$store.dispatch('user/addOrderNumber',orderArr)\n    // })\n    await getOrderCommodity().then(res => {\n      this.$store.dispatch('user/orderCommodity', res.data);\n    });\n  }\n};","map":{"version":3,"names":["getOrderCommodity","mapState","name","data","address","confromAddress","computed","methods","deletePayedShoppingCart","number","$confirm","type","then","$store","dispatch","catch","created","JSON","parse","sessionStorage","getItem","state","user","find","item","id","res"],"sources":["src/user/PerOrder.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 订单信息页面 -->\r\n    <div class=\"section-goods\" v-if=\"payedShoppingCart.length > 0\">\r\n      <p class=\"titleleft\">订单:</p>\r\n      <div class=\"goods-list\" v-for=\"order in payedShoppingCart\" :key=\"order.number\">\r\n        <div class=\"order-box\">\r\n          <div class=\"order-statue\">已付款</div>\r\n          <span class=\"order-number\">订单编号：{{ order.number }}</span>\r\n\r\n          <span class=\"total-price\">支付价格：<i>{{ order.price }}</i></span>\r\n\r\n          <div class=\"address-box\">\r\n            <p>送到:</p>\r\n            <div class=\"address-body\">\r\n              <li v-for=\"item in order.address\" :key=\"item.id\">\r\n                <h2>{{item.contact_personnel}}</h2>\r\n                <p class=\"phone\">{{item.contact_phone}}</p>\r\n                <p class=\"address\">{{item.address}}</p>\r\n              </li>\r\n            </div>\r\n          </div>\r\n          <div class=\"item-box\">\r\n            <ul>\r\n              <li v-for=\"item in order.shopping\" :key=\"item.id\">\r\n                <!-- <img :src=\"$target + item.productImg\" /> -->\r\n                <img class=\"pro-img\" :src=item.img alt=\"\">\r\n                <div class=\"pro-name\">{{item.title}}</div>\r\n                <div class=\"pro-id\">订单号：{{ item.id }}</div>\r\n                <div class=\"pro-price\">应付:{{item.price}}元 x {{item.number}}</div>\r\n                <div class=\"pro-total\">实付：{{item.price * item.number}}元</div>\r\n              </li>\r\n          </ul>\r\n          </div>\r\n          <div class=\"action-delete\" @click=\"deletePayedShoppingCart(order.number)\">删除订单</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3>你还没有下单，快去看看吧</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getOrderCommodity from '@/api/orderCommodity';\r\n// import getOrderNumber from '@/api/order';\r\nimport { mapState } from 'vuex';\r\nexport default {\r\n    name:'PerOrder',\r\n    data(){\r\n      return{\r\n        address:'',\r\n        confromAddress:'',\r\n      }\r\n    },\r\n    computed:{\r\n      ...mapState('user',['payedShoppingCart','order']),\r\n    },\r\n    methods:{\r\n      deletePayedShoppingCart(number){\r\n        this.$confirm('确定要删除这个订单吗', '删除提示', { type: 'warning' }).then(() => {\r\n          this.$store.dispatch('user/deletePayedShoppingCart',number)\r\n          }).catch(()=>{\r\n            return 0\r\n          })\r\n        }\r\n      },\r\n    async created(){\r\n      this.confromAddress = JSON.parse(sessionStorage.getItem('address'))\r\n      this.address = this.$store.state.user.address.find(item=>item.id == this.confromAddress)\r\n      // await getOrderNumber().then(res=>{\r\n      //   let orderArr = []\r\n      //   res.data.forEach(e=>{\r\n      //     orderArr.push(e.order_sn)\r\n      //   })\r\n      //   this.$store.dispatch('user/addOrderNumber',orderArr)\r\n      // })\r\n      await getOrderCommodity().then(res=>{\r\n       this.$store.dispatch('user/orderCommodity',res.data)\r\n      })\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.section-goods {\r\n  width: 800px;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  text-align: left;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n.total-price{\r\n  margin-left:30px ;\r\n  \r\n}\r\n.total-price i{\r\n  color: #d33a31;\r\n  font-size: 20px;\r\n  font-style: normal;\r\n}\r\n.order-statue{\r\n  background:rgb(138, 200, 151);\r\n  padding: 25px 30px 1px;\r\n}\r\n.order-number{\r\n  padding-bottom: 20px;\r\n  font-weight: bold;\r\n  color:black;\r\n}\r\n\r\n.order-box{\r\n  width: auto;\r\n}\r\n.order-box:hover .action-delete{\r\n  display: block;\r\n}\r\n.address-box{\r\n  float: right;\r\n}\r\n.item-box ul{\r\n  width: auto;\r\n  min-height: 180px;\r\n  padding-bottom: 30px;\r\n}\r\n.item-box ul li {\r\n  margin-bottom: 15px;\r\n  width: 513px;\r\n}\r\n.titleleft {\r\n  color: #333;\r\n  font-size: 18px;\r\n  line-height: 40px;\r\n}\r\n.goods-list {\r\n  position: relative;\r\n  padding: 5px 0;\r\n  overflow: hidden;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n.goods-list li {\r\n  color: #424242;\r\n  overflow: hidden;\r\n}\r\n.goods-list li img {\r\n  float: left;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n}\r\n.goods-list li .pro-img {\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n.goods-list li .pro-name {\r\n  line-height: 30px;\r\n  white-space:nowrap; \r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n.goods-list li .pro-id{\r\n  line-height: 30px;\r\n}\r\n.goods-list li .pro-price {\r\n  line-height: 30px;\r\n}\r\n .goods-list li .pro-total {\r\n  color: #d33a31;\r\n  line-height: 30px;\r\n}\r\n.action-delete{\r\n  position: absolute;\r\n  display: none;\r\n  bottom: 10px;\r\n  width: 70px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  border: 1px solid #d33a31;\r\n  border-radius: 5%;\r\n\r\n}\r\n</style>"],"mappings":"AA6CA,OAAAA,iBAAA;AACA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAL,QAAA;EACA;EACAM,OAAA;IACAC,wBAAAC,MAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA;QACA,KAAAC,MAAA,CAAAC,QAAA,iCAAAL,MAAA;MACA,GAAAM,KAAA;QACA;MACA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAX,cAAA,GAAAY,IAAA,CAAAC,KAAA,CAAAC,cAAA,CAAAC,OAAA;IACA,KAAAhB,OAAA,QAAAS,MAAA,CAAAQ,KAAA,CAAAC,IAAA,CAAAlB,OAAA,CAAAmB,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,SAAApB,cAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAAL,iBAAA,GAAAY,IAAA,CAAAc,GAAA;MACA,KAAAb,MAAA,CAAAC,QAAA,wBAAAY,GAAA,CAAAvB,IAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}