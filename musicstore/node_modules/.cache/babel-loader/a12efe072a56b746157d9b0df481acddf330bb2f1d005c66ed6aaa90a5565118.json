{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: process.env.BASE_API,\n  // 请求前置连接\n  timeout: 10 * 1000 // 超时时间\n  // withCredentials: false, // 跨域问题时设置\n});\n\napi.interceptors.request.use(config => {\n  // config 请求的信息\n  return config; // 将配置完成的config对象返回出去 如果不返回 请求则不会进行\n}, err => {\n  // 请求发生错误时的处理 抛出错误\n  Promise.reject(err);\n});\nservice.interceptors.response.use(response => {\n  /**\r\n   * 1、鉴权：401，403: \r\n   *      1、退出登录 \r\n   *      2、重新鉴权：\r\n   *          1、失败退出登录\r\n   *          2、成功再次发起请求\r\n   * 2、错误信息弹窗提示，并返回错误信息\r\n   * 2xx\r\n   * \r\n   * {\r\n      code: 200,\r\n      data: {},\r\n      message: 'success'\r\n     }\r\n   */\n\n  console.log('-----');\n  console.log(response);\n  const res = response.data;\n  if (response.status > 199 && response.status < 300) {\n    return res;\n  }\n\n  // if ([401, 403].includes(response.status)) {\n  if (response.status == 401) {\n    console.log(\"token失效了\");\n    const refreshToken = window.localStorage.refreshToken;\n    getRefresh(refreshToken).then(res => {\n      const {\n        token,\n        refreshToken\n      } = res.data.data;\n      console.log(res.data.data);\n      window.localStorage.setItem('token', token);\n      window.localStorage.setItem('refreshToken', refreshToken);\n    });\n    // 退出登录\n  }\n\n  // 弹窗提示\n  console.log(res.code);\n  return Promise.reject(new Error(res.message));\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","BASE_API","timeout","interceptors","request","use","config","err","Promise","reject","service","response","console","log","res","data","status","refreshToken","window","localStorage","getRefresh","then","token","setItem","code","Error","message","error"],"sources":["D:/WYKS2python/musicstore/src/utils/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.BASE_API,    // 请求前置连接\r\n    timeout: 10 * 1000, // 超时时间\r\n    // withCredentials: false, // 跨域问题时设置\r\n})\r\n        \r\napi.interceptors.request.use(config => {\r\n    // config 请求的信息\r\n   return config // 将配置完成的config对象返回出去 如果不返回 请求则不会进行\r\n}, err => {\r\n   // 请求发生错误时的处理 抛出错误\r\n  Promise.reject(err)\r\n})\r\n\r\nservice.interceptors.response.use(\r\n    (response) => {\r\n        /**\r\n         * 1、鉴权：401，403: \r\n         *      1、退出登录 \r\n         *      2、重新鉴权：\r\n         *          1、失败退出登录\r\n         *          2、成功再次发起请求\r\n         * 2、错误信息弹窗提示，并返回错误信息\r\n         * 2xx\r\n         * \r\n         * {\r\n            code: 200,\r\n            data: {},\r\n            message: 'success'\r\n           }\r\n         */\r\n\r\n        console.log('-----');\r\n        console.log(response);\r\n\r\n        const res = response.data\r\n\r\n        if (response.status > 199 && response.status < 300) {\r\n            return res\r\n        }\r\n\r\n        // if ([401, 403].includes(response.status)) {\r\n        if (response.status == 401){\r\n        console.log(\"token失效了\");\r\n        const refreshToken = window.localStorage.refreshToken\r\n        getRefresh(refreshToken).then(res=>{\r\n            const {token, refreshToken} = res.data.data\r\n            console.log(res.data.data);\r\n            window.localStorage.setItem('token', token)\r\n            window.localStorage.setItem('refreshToken', refreshToken)\r\n        })\r\n            // 退出登录\r\n        }\r\n\r\n        // 弹窗提示\r\n        console.log(res.code);\r\n        return Promise.reject(new Error(res.message))\r\n\r\n    },\r\n    (error) => {\r\n\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default api\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAAK;EAClCC,OAAO,EAAE,EAAE,GAAG,IAAI,CAAE;EACpB;AACJ,CAAC,CAAC;;AAEFN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACnC;EACD,OAAOA,MAAM,EAAC;AACjB,CAAC,EAAEC,GAAG,IAAI;EACP;EACDC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AACrB,CAAC,CAAC;AAEFG,OAAO,CAACP,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC5BM,QAAQ,IAAK;EACV;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEQC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpBD,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAErB,MAAMG,GAAG,GAAGH,QAAQ,CAACI,IAAI;EAEzB,IAAIJ,QAAQ,CAACK,MAAM,GAAG,GAAG,IAAIL,QAAQ,CAACK,MAAM,GAAG,GAAG,EAAE;IAChD,OAAOF,GAAG;EACd;;EAEA;EACA,IAAIH,QAAQ,CAACK,MAAM,IAAI,GAAG,EAAC;IAC3BJ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,MAAMI,YAAY,GAAGC,MAAM,CAACC,YAAY,CAACF,YAAY;IACrDG,UAAU,CAACH,YAAY,CAAC,CAACI,IAAI,CAACP,GAAG,IAAE;MAC/B,MAAM;QAACQ,KAAK;QAAEL;MAAY,CAAC,GAAGH,GAAG,CAACC,IAAI,CAACA,IAAI;MAC3CH,OAAO,CAACC,GAAG,CAACC,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;MAC1BG,MAAM,CAACC,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;MAC3CJ,MAAM,CAACC,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEN,YAAY,CAAC;IAC7D,CAAC,CAAC;IACE;EACJ;;EAEA;EACAL,OAAO,CAACC,GAAG,CAACC,GAAG,CAACU,IAAI,CAAC;EACrB,OAAOhB,OAAO,CAACC,MAAM,CAAC,IAAIgB,KAAK,CAACX,GAAG,CAACY,OAAO,CAAC,CAAC;AAEjD,CAAC,EACAC,KAAK,IAAK;EAEP,OAAOnB,OAAO,CAACC,MAAM,CAACkB,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAe/B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}