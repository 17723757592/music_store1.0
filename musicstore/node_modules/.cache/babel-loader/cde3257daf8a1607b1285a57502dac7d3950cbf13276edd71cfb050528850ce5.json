{"ast":null,"code":"import axios from \"axios\";\nimport store from \"@/store\";\nconst service = axios.create({\n  baseURL: process.env.BASE_API,\n  // 请求前置连接\n  timeout: 10 * 1000 // 超时时间\n  // withCredentials: false, // 跨域问题时设置\n});\n\nservice.interceptors.request.use(config => {\n  if (store.state.user && store.state.user.authorization) {\n    config.headers.Authorization = store.state.user.authorization;\n  }\n  return config;\n}, error => {\n  // 弹窗提示\n  console.log(error);\n  return Promise.reject(error);\n});\nservice.interceptors.response.use(response => {\n  /**\r\n   * 1、鉴权：401，403: \r\n   *      1、退出登录 \r\n   *      2、重新鉴权：\r\n   *          1、失败退出登录\r\n   *          2、成功再次发起请求\r\n   * 2、错误信息弹窗提示，并返回错误信息\r\n   * 2xx\r\n   * \r\n   * {\r\n      code: 200,\r\n      data: {},\r\n      message: 'success'\r\n     }\r\n   */\n\n  const res = response;\n  if (res.code >= 200 && res.code < 300) {\n    return res.data;\n  }\n  if ([401, 403].includes(res.code)) {\n    // 退出登录\n  }\n\n  // 弹窗提示\n  console.log(res.code);\n  return Promise.reject(new Error(res.message));\n}, error => {\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","store","service","create","baseURL","process","env","BASE_API","timeout","interceptors","request","use","config","state","user","authorization","headers","Authorization","error","console","log","Promise","reject","response","res","code","data","includes","Error","message"],"sources":["D:/WYKS2python/musicstore/src/utils/requests.js"],"sourcesContent":["import axios from \"axios\";\r\nimport store from \"@/store\";\r\n\r\nconst service = axios.create({\r\n    baseURL: process.env.BASE_API,    // 请求前置连接\r\n    timeout: 10 * 1000, // 超时时间\r\n    // withCredentials: false, // 跨域问题时设置\r\n})\r\n\r\nservice.interceptors.request.use(\r\n    (config) => {\r\n\r\n        if (store.state.user && store.state.user.authorization) {\r\n            config.headers.Authorization = store.state.user.authorization\r\n        }\r\n        return config\r\n    },\r\n    (error) => {\r\n        // 弹窗提示\r\n        console.log(error);\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nservice.interceptors.response.use(\r\n    (response) => {\r\n        /**\r\n         * 1、鉴权：401，403: \r\n         *      1、退出登录 \r\n         *      2、重新鉴权：\r\n         *          1、失败退出登录\r\n         *          2、成功再次发起请求\r\n         * 2、错误信息弹窗提示，并返回错误信息\r\n         * 2xx\r\n         * \r\n         * {\r\n            code: 200,\r\n            data: {},\r\n            message: 'success'\r\n           }\r\n         */\r\n\r\n        const res = response\r\n\r\n        if (res.code >= 200 && res.code < 300) {\r\n            return res.data\r\n        }\r\n\r\n        if ([401, 403].includes(res.code)) {\r\n            // 退出登录\r\n        }\r\n\r\n        // 弹窗提示\r\n        console.log(res.code);\r\n        return Promise.reject(new Error(res.message))\r\n\r\n    },\r\n    (error) => {\r\n\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default service"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EACzBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAAK;EAClCC,OAAO,EAAE,EAAE,GAAG,IAAI,CAAE;EACpB;AACJ,CAAC,CAAC;;AAEFN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;EAER,IAAIX,KAAK,CAACY,KAAK,CAACC,IAAI,IAAIb,KAAK,CAACY,KAAK,CAACC,IAAI,CAACC,aAAa,EAAE;IACpDH,MAAM,CAACI,OAAO,CAACC,aAAa,GAAGhB,KAAK,CAACY,KAAK,CAACC,IAAI,CAACC,aAAa;EACjE;EACA,OAAOH,MAAM;AACjB,CAAC,EACAM,KAAK,IAAK;EACP;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAGDhB,OAAO,CAACO,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC5BY,QAAQ,IAAK;EACV;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEQ,MAAMC,GAAG,GAAGD,QAAQ;EAEpB,IAAIC,GAAG,CAACC,IAAI,IAAI,GAAG,IAAID,GAAG,CAACC,IAAI,GAAG,GAAG,EAAE;IACnC,OAAOD,GAAG,CAACE,IAAI;EACnB;EAEA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACH,GAAG,CAACC,IAAI,CAAC,EAAE;IAC/B;EAAA;;EAGJ;EACAN,OAAO,CAACC,GAAG,CAACI,GAAG,CAACC,IAAI,CAAC;EACrB,OAAOJ,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAACJ,GAAG,CAACK,OAAO,CAAC,CAAC;AAEjD,CAAC,EACAX,KAAK,IAAK;EAEP,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAehB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}