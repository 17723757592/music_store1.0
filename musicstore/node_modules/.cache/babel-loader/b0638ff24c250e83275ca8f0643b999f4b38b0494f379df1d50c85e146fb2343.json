{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport getOrderList from '@/api/orderList';\nimport orderDelete from '@/api/deleteOrder';\n// import getOrderNumber from '@/api/order';\n\n// import { mapState } from 'vuex';\nexport default {\n  name: 'PerOrder',\n  data() {\n    return {\n      address: '',\n      confromAddress: '',\n      orderList: [],\n      showList: [],\n      information: JSON.parse(this.$store.state.user.information)\n    };\n  },\n  async created() {\n    this.getOrder();\n    // this.confromAddress = JSON.parse(sessionStorage.getItem('address'))\n    // console.log(this.confromAddress);\n    // this.address = this.$store.state.user.address.find(item=>item.id == this.confromAddress)\n    // await getOrderNumber().then(res=>{\n    //   let orderArr = []\n    //   res.data.forEach(e=>{\n    //     orderArr.push(e.order_sn)\n    //   })\n    //   this.$store.dispatch('user/addOrderNumber',orderArr)\n    // }) \n    console.log(this.information);\n    // await this.$store.dispatch('user/userInformation')\n  },\n\n  methods: {\n    deletePayedShoppingCart(order_id) {\n      this.$confirm('确定要取消这个订单吗', '删除提示', {\n        type: 'warning'\n      }).then(() => {\n        this.$store.dispatch('user/deletePayedShoppingCart', order_id);\n        // 删除订单\n        orderDelete(order_id);\n      }).catch(() => {\n        return 0;\n      });\n    },\n    async getOrder() {\n      await getOrderList().then(res => {\n        this.orderList = res.data;\n        this.orderList.forEach(item => {\n          let {\n            order_id\n          } = item;\n          console.log(order_id);\n          if (!this.showList[order_id]) {\n            this.showList[order_id] = {\n              order_id,\n              goods: [],\n              price: '',\n              update_time: ''\n            };\n          }\n          this.showList[order_id].goods.push(item);\n          const sumFunction = (a, b) => a + b;\n          let sum = 0;\n          this.showList[order_id].goods.forEach(item => {\n            sum = sumFunction(sum, item.price * item.quantity);\n          });\n          this.showList[order_id].price = sum;\n          this.showList[order_id].update_time = new Date(item.update_time);\n          console.log(this.showList[order_id].update_time);\n        });\n        // 转为对象\n        this.showList = Object.values(this.showList);\n        // 将updata_time最新的订单放在前面\n        this.showList.sort((a, b) => {\n          return b.update_time - a.update_time;\n        });\n        console.log(this.showList);\n      });\n    }\n  }\n};","map":{"version":3,"names":["getOrderList","orderDelete","name","data","address","confromAddress","orderList","showList","information","JSON","parse","$store","state","user","created","getOrder","console","log","methods","deletePayedShoppingCart","order_id","$confirm","type","then","dispatch","catch","res","forEach","item","goods","price","update_time","push","sumFunction","a","b","sum","quantity","Date","Object","values","sort"],"sources":["src/user/PerOrder.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 订单信息页面 -->\r\n    <div class=\"section-goods\" v-if=\"showList.length > 0\">\r\n      <p class=\"titleleft\">订单:</p>\r\n      <div class=\"goods-list\" v-for=\"order in showList\" :key=\"order.order_id\">\r\n        <div class=\"order-box\">\r\n          <div class=\"order-statue\">\r\n            <p>等待付款</p>\r\n            <span class=\"order-time\">{{ order.goods[0].create_time }}</span> |\r\n            <span class=\"order-user\">{{information.nickname}}</span> |\r\n            <span class=\"order-number\">订单编号：{{ order.order_id }}</span> |\r\n            <span class=\"methods-pay\"> 在线支付</span>\r\n            <span class=\"total-price\">应付价格：<i>{{ order.price }}</i> 元</span>\r\n          </div>\r\n          <!-- <div class=\"address-box\">\r\n            <p>送到:</p>\r\n            <div class=\"address-body\">\r\n              <li v-for=\"item in order.address\" :key=\"item.id\">\r\n                <h2>{{item.contact_personnel}}</h2>\r\n                <p class=\"phone\">{{item.contact_phone}}</p>\r\n                <p class=\"address\">{{item.address}}</p>\r\n              </li>\r\n            </div>\r\n          </div> -->\r\n          <div class=\"item-box\">\r\n            <div class=\"contend\">\r\n              <ul>\r\n                <li v-for=\"item in order.goods\" :key=\"item.commodity_id\">\r\n                  <!-- <img :src=\"$target + item.productImg\" /> -->\r\n                  <img class=\"pro-img\" :src=item.pictures alt=\"\">\r\n                  <div class=\"pro-name\">{{item.title}}</div>\r\n                  <div class=\"pro-price\">{{item.price}}元 x {{item.quantity}}</div>\r\n                  <!-- <div class=\"pro-total\">实付：{{item.price * item.number}}元</div> -->\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <ul class=\"action\">\r\n              <li class=\"action-pay\">立即付款</li>\r\n              <li class=\"action-delete\">订单详情</li>\r\n              <li class=\"action-delete\" @click=\"deletePayedShoppingCart(order.order_id)\">取消订单</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3>你还没有下单，快去看看吧</h3>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getOrderList from '@/api/orderList';\r\nimport orderDelete from '@/api/deleteOrder';\r\n// import getOrderNumber from '@/api/order';\r\n\r\n// import { mapState } from 'vuex';\r\nexport default {\r\n    name:'PerOrder',\r\n    data(){\r\n      return{\r\n        address:'',\r\n        confromAddress:'',\r\n        orderList:[],\r\n        showList:[],\r\n        information:JSON.parse(this.$store.state.user.information)\r\n      }\r\n    },\r\n    async created(){\r\n      this.getOrder()\r\n      // this.confromAddress = JSON.parse(sessionStorage.getItem('address'))\r\n      // console.log(this.confromAddress);\r\n      // this.address = this.$store.state.user.address.find(item=>item.id == this.confromAddress)\r\n      // await getOrderNumber().then(res=>{\r\n      //   let orderArr = []\r\n      //   res.data.forEach(e=>{\r\n      //     orderArr.push(e.order_sn)\r\n      //   })\r\n      //   this.$store.dispatch('user/addOrderNumber',orderArr)\r\n      // }) \r\n        console.log(this.information);\r\n      // await this.$store.dispatch('user/userInformation')\r\n    },\r\n    methods:{\r\n      deletePayedShoppingCart(order_id){\r\n        this.$confirm('确定要取消这个订单吗', '删除提示', { type: 'warning' }).then(() => {\r\n          this.$store.dispatch('user/deletePayedShoppingCart',order_id)\r\n          // 删除订单\r\n          orderDelete(order_id)\r\n          }).catch(()=>{\r\n            return 0\r\n          })\r\n      },\r\n      async getOrder(){\r\n        await getOrderList().then(res=>{\r\n          this.orderList = res.data\r\n          this.orderList.forEach(item => {\r\n            let {order_id} = item;\r\n            console.log(order_id);\r\n            if(!this.showList[order_id]){\r\n              this.showList[order_id] = {\r\n                order_id,\r\n                goods:[],\r\n                price:'',\r\n                update_time:''\r\n              }\r\n            }\r\n\r\n            this.showList[order_id].goods.push(item)\r\n            const sumFunction = (a, b) => a + b;\r\n            let sum = 0\r\n            this.showList[order_id].goods.forEach((item) =>{\r\n              sum = sumFunction(sum, item.price * item.quantity)\r\n            })\r\n            this.showList[order_id].price = sum\r\n            this.showList[order_id].update_time = new Date(item.update_time)\r\n            console.log(this.showList[order_id].update_time);\r\n          })\r\n          // 转为对象\r\n          this.showList = Object.values(this.showList)\r\n          // 将updata_time最新的订单放在前面\r\n          this.showList.sort((a,b)=>{\r\n              return( b.update_time - a.update_time)\r\n          })\r\n          console.log(this.showList);\r\n        })\r\n      },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.section-goods {\r\n  width: 900px;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  text-align: left;\r\n  /* border-bottom: 1px solid #e0e0e0; */\r\n}\r\n.total-price{\r\n  margin-left:30px ;\r\n  \r\n}\r\n.total-price i{\r\n  color: #d33a31;\r\n  font-size: 30px;\r\n  font-style: normal;\r\n}\r\n.order-statue{\r\n  color: #e0e0e0;\r\n  font-size: 18px;\r\n  padding: 25px  25px;\r\n  background-color: #fffaf7;\r\n  border-bottom: 1px solid  #feccac;\r\n}\r\n.order-statue p {\r\n  color: #ff6700;\r\n}\r\n.order-statue span {\r\n  margin-top: 35px;\r\n  font-weight: 400;\r\n  color: #757575;\r\n  font-size: 15px;\r\n}\r\n.order-number{\r\n  padding-bottom: 20px;\r\n  font-weight: bold;\r\n  color:black;\r\n}\r\n\r\n.order-box{\r\n  width: auto;\r\n  border: 1px solid  #d33a31;\r\n}\r\n.address-box{\r\n  float: right;\r\n}\r\n.item-box{\r\n  overflow: hidden;\r\n  padding: 15px;\r\n  /* margin-bottom: 15px; */\r\n}\r\n.contend{\r\n  float: left;\r\n  overflow: hidden;\r\n}\r\n/* .item-box ul{\r\n  width: auto;\r\n  min-height: 180px;\r\n  padding: 25px  25px;\r\n} */\r\n.contend ul li {\r\n  margin-bottom: 15px;\r\n  width: 513px;\r\n}\r\n.titleleft {\r\n  color: #333;\r\n  font-size: 18px;\r\n  margin: 0 48px;\r\n  line-height: 40px;\r\n}\r\n.goods-list {\r\n  position: relative;\r\n  padding: 8px 48px;\r\n  overflow: hidden;\r\n  /* border-bottom: 1px solid #e0e0e0; */\r\n}\r\n.contend li {\r\n  color: #424242;\r\n  overflow: hidden;\r\n}\r\n.contend li img {\r\n  float: left;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-top:15px;\r\n  margin-right:10px;\r\n}\r\n.contend li .pro-img {\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n.contend li .pro-name {\r\n  padding-top:35px;\r\n  white-space:nowrap; \r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n/* .goods-list li .pro-price {\r\n  line-height: 30px;\r\n} */\r\n.action{\r\n  float: right;\r\n}\r\n.action li {\r\n  display: block;\r\n  width: 118px;\r\n  height: 28px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  line-height: 28px;\r\n  cursor: pointer;\r\n  list-style: none;\r\n  margin: 0 0 10px auto;\r\n  color: #b0b0b0;\r\n  border: 1px solid #b0b0b0;\r\n}\r\n.action li:first-child{\r\n  background: #ff6700;\r\n  border-color: #ff6700;\r\n  margin-top: 10px;\r\n  color: #fff;\r\n}\r\n/* .action-delete{\r\n  position: absolute;\r\n  bottom: 10px;\r\n  width: 70px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  border: 1px solid #d33a31;\r\n  border-radius: 5%;\r\n\r\n} */\r\n</style>"],"mappings":";AAqDA,OAAAA,YAAA;AACA,OAAAC,WAAA;AACA;;AAEA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;MACAC,SAAA;MACAC,QAAA;MACAC,WAAA,EAAAC,IAAA,CAAAC,KAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAL,WAAA;IACA;EACA;EACA,MAAAM,QAAA;IACA,KAAAC,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,OAAA,CAAAC,GAAA,MAAAT,WAAA;IACA;EACA;;EACAU,OAAA;IACAC,wBAAAC,QAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA;QACA,KAAAZ,MAAA,CAAAa,QAAA,iCAAAJ,QAAA;QACA;QACAnB,WAAA,CAAAmB,QAAA;MACA,GAAAK,KAAA;QACA;MACA;IACA;IACA,MAAAV,SAAA;MACA,MAAAf,YAAA,GAAAuB,IAAA,CAAAG,GAAA;QACA,KAAApB,SAAA,GAAAoB,GAAA,CAAAvB,IAAA;QACA,KAAAG,SAAA,CAAAqB,OAAA,CAAAC,IAAA;UACA;YAAAR;UAAA,IAAAQ,IAAA;UACAZ,OAAA,CAAAC,GAAA,CAAAG,QAAA;UACA,UAAAb,QAAA,CAAAa,QAAA;YACA,KAAAb,QAAA,CAAAa,QAAA;cACAA,QAAA;cACAS,KAAA;cACAC,KAAA;cACAC,WAAA;YACA;UACA;UAEA,KAAAxB,QAAA,CAAAa,QAAA,EAAAS,KAAA,CAAAG,IAAA,CAAAJ,IAAA;UACA,MAAAK,WAAA,GAAAA,CAAAC,CAAA,EAAAC,CAAA,KAAAD,CAAA,GAAAC,CAAA;UACA,IAAAC,GAAA;UACA,KAAA7B,QAAA,CAAAa,QAAA,EAAAS,KAAA,CAAAF,OAAA,CAAAC,IAAA;YACAQ,GAAA,GAAAH,WAAA,CAAAG,GAAA,EAAAR,IAAA,CAAAE,KAAA,GAAAF,IAAA,CAAAS,QAAA;UACA;UACA,KAAA9B,QAAA,CAAAa,QAAA,EAAAU,KAAA,GAAAM,GAAA;UACA,KAAA7B,QAAA,CAAAa,QAAA,EAAAW,WAAA,OAAAO,IAAA,CAAAV,IAAA,CAAAG,WAAA;UACAf,OAAA,CAAAC,GAAA,MAAAV,QAAA,CAAAa,QAAA,EAAAW,WAAA;QACA;QACA;QACA,KAAAxB,QAAA,GAAAgC,MAAA,CAAAC,MAAA,MAAAjC,QAAA;QACA;QACA,KAAAA,QAAA,CAAAkC,IAAA,EAAAP,CAAA,EAAAC,CAAA;UACA,OAAAA,CAAA,CAAAJ,WAAA,GAAAG,CAAA,CAAAH,WAAA;QACA;QACAf,OAAA,CAAAC,GAAA,MAAAV,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}