{"ast":null,"code":"import getUserAddress from '@/api/getUserAddress';\nimport { isvalidPhone } from '../utils/phone_number';\nexport default {\n  name: 'PerAddress',\n  data() {\n    const validPhone = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入电话号码'));\n      } else if (!isvalidPhone(value)) {\n        //判断用户输入的值是否符合规则\n        callback(new Error('请输入正确的11位手机号码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      dialogVisible: false,\n      confirmAddress: '',\n      // 虚拟数据\n      addressList: '',\n      ruleForm: {\n        name: '',\n        number: '',\n        address: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入您的名字',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 5,\n          message: '长度在 2 到 5 个字符',\n          trigger: 'blur'\n        }],\n        number: [{\n          required: true,\n          trigger: 'blur',\n          validator: validPhone\n        }],\n        address: [{\n          required: true,\n          message: '请输入您的收货地址',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 30,\n          message: '你的位置信息似乎不正确',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    chooseAddress(item) {\n      this.confirmAddress = item.id;\n      this.$emit('getConfirmAddress', this.confirmAddress);\n    }\n  },\n  async created() {\n    await getUserAddress().then(res => {\n      this.addressList = res.data;\n      const a = this.addressList.find(item => {\n        item.id === 1;\n      });\n      console.log(a, this.addressList);\n      if (a) {\n        this.confirmAddress = a[0].id;\n      }\n    });\n  },\n  mounted() {\n    this.$emit('getConfirmAddress', this.confirmAddress);\n  }\n};","map":{"version":3,"names":["getUserAddress","isvalidPhone","name","data","validPhone","rule","value","callback","Error","dialogVisible","confirmAddress","addressList","ruleForm","number","address","rules","required","message","trigger","min","max","validator","methods","chooseAddress","item","id","$emit","created","then","res","a","find","console","log","mounted"],"sources":["src/user/PerAddress.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- 选择地址 -->\r\n      <div class=\"section-address\">\r\n        <p class=\"titleleft\">收货地址</p>\r\n        <div class=\"address-body\">\r\n          <ul>\r\n            <li\r\n              v-for=\"item in addressList\" @click=\"chooseAddress(item)\"\r\n              :class=\"item.id == confirmAddress ? 'in-section' : ''\"\r\n              :key=\"item.id\">\r\n              <h2>{{item.contact_personnel}}</h2>\r\n              <p class=\"phone\">{{item.contact_phone}}</p>\r\n              <p class=\"address\">{{item.address}}</p>\r\n            </li>\r\n            <li class=\"add-address\" @click=\"dialogVisible = true\">\r\n              <i class=\"el-icon-circle-plus-outline\"></i>\r\n              <p>添加新地址</p>\r\n            </li>\r\n          </ul>\r\n          <el-dialog title=\"添加收获地址\" :visible.sync=\"dialogVisible\">\r\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n              <el-form-item label=\"名字\" prop=\"name\">\r\n                <el-input v-model=\"ruleForm.name\" :style=\"{width:'90%'}\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"手机号\" prop=\"number\">\r\n                <el-input v-model.number=\"ruleForm.number\" :style=\"{width:'90%'}\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"地址\" prop=\"address\">\r\n                <el-input v-model=\"ruleForm.address\" :style=\"{width:'90%'}\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\" :style=\"{'text-align':'center'}\">\r\n              <el-button @click=\"dialogVisible = false\">取 消</el-button>  \r\n              <el-button type=\"primary\">确 定</el-button>\r\n            </div>\r\n          </el-dialog>\r\n        </div>\r\n      </div>\r\n      <!-- 选择地址END -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getUserAddress from '@/api/getUserAddress'\r\nimport {isvalidPhone} from '../utils/phone_number'\r\nexport default {\r\n    name:'PerAddress',\r\n    data() {\r\n      const validPhone = (rule, value, callback) => {\r\n        if (!value) {\r\n          callback(new Error('请输入电话号码'))\r\n        } else if (!isvalidPhone(value)) { //判断用户输入的值是否符合规则\r\n          callback(new Error('请输入正确的11位手机号码'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        dialogVisible:false,  \r\n        confirmAddress: '',   \r\n        // 虚拟数据\r\n        addressList:'',\r\n        ruleForm: {\r\n          name: '',\r\n          number: '',\r\n          address: '',\r\n        },\r\n        rules: {\r\n          name: [\r\n            { required: true, message: '请输入您的名字', trigger: 'blur' },\r\n            { min: 2, max: 5, message: '长度在 2 到 5 个字符', trigger: 'blur' }\r\n          ],\r\n          number:[\r\n            { required: true, trigger: 'blur',validator: validPhone}\r\n          ],\r\n          address:[\r\n            { required: true, message: '请输入您的收货地址', trigger: 'blur' },\r\n            { min: 5, max: 30, message: '你的位置信息似乎不正确', trigger: 'blur' }\r\n          ],\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      chooseAddress(item) {\r\n        this.confirmAddress = item.id\r\n        this.$emit('getConfirmAddress',this.confirmAddress)\r\n      }\r\n    },\r\n    async created(){\r\n      await getUserAddress().then(res=>{\r\n        this.addressList = res.data\r\n        const a = this.addressList.find((item)=>{\r\n          item.id === 1\r\n        })\r\n        console.log(a, this.addressList);\r\n        if(a){\r\n          this.confirmAddress =a[0].id\r\n        }\r\n      })\r\n    },\r\n    mounted(){\r\n      this.$emit('getConfirmAddress',this.confirmAddress)\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 选择地址CSS48 */\r\n.section-address {\r\n  margin: 0 48px;\r\n  overflow: hidden;\r\n}\r\n.section-address .titleleft {\r\n  color: #333;\r\n  font-size: 18px;  \r\n  line-height: 20px;\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n}\r\n.address-body{\r\n  overflow: hidden;\r\n}\r\n.address-body li {\r\n  float: left;\r\n  color: #333;\r\n  width: 220px;\r\n  text-align: left;\r\n  height: 178px;\r\n  border: 1px solid #e0e0e0;\r\n  padding: 15px 24px 0;\r\n  margin-right: 17px;\r\n  margin-bottom: 24px;\r\n}\r\n.address-body .in-section {\r\n  border: 1px solid #d33a31;\r\n}\r\n.address-body li h2 {\r\n  font-size: 18px;\r\n  font-weight: normal;\r\n  line-height: 30px;\r\n  margin-bottom: 10px;\r\n}\r\n.address-body li p {\r\n  font-size: 14px;\r\n  color: #757575;\r\n}\r\n.address-body li .address {\r\n  padding: 10px 0;\r\n  max-width: 180px;\r\n  max-height: 88px;\r\n  line-height: 22px;\r\n  overflow: hidden;\r\n}\r\n.address-body .add-address {\r\n  text-align: center;\r\n  line-height: 30px;\r\n}\r\n.address-body .add-address i {\r\n  font-size: 30px;\r\n  padding-top: 50px;\r\n  text-align: center;\r\n}\r\n/* 选择地址CSS END */\r\n</style>"],"mappings":"AA4CA,OAAAA,cAAA;AACA,SAAAC,YAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA,MAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,YAAAP,YAAA,CAAAK,KAAA;QAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,aAAA;MACAC,cAAA;MACA;MACAC,WAAA;MACAC,QAAA;QACAV,IAAA;QACAW,MAAA;QACAC,OAAA;MACA;MACAC,KAAA;QACAb,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,MAAA,GACA;UAAAG,QAAA;UAAAE,OAAA;UAAAG,SAAA,EAAAjB;QAAA,EACA;QACAU,OAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,OAAA;IACAC,cAAAC,IAAA;MACA,KAAAd,cAAA,GAAAc,IAAA,CAAAC,EAAA;MACA,KAAAC,KAAA,2BAAAhB,cAAA;IACA;EACA;EACA,MAAAiB,QAAA;IACA,MAAA3B,cAAA,GAAA4B,IAAA,CAAAC,GAAA;MACA,KAAAlB,WAAA,GAAAkB,GAAA,CAAA1B,IAAA;MACA,MAAA2B,CAAA,QAAAnB,WAAA,CAAAoB,IAAA,CAAAP,IAAA;QACAA,IAAA,CAAAC,EAAA;MACA;MACAO,OAAA,CAAAC,GAAA,CAAAH,CAAA,OAAAnB,WAAA;MACA,IAAAmB,CAAA;QACA,KAAApB,cAAA,GAAAoB,CAAA,IAAAL,EAAA;MACA;IACA;EACA;EACAS,QAAA;IACA,KAAAR,KAAA,2BAAAhB,cAAA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}