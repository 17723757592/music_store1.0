{"ast":null,"code":"const state = {\n  status: false,\n  authorization: localStorage.getItem('authorization') || '',\n  login: JSON.parse(localStorage.getItem('login')) || false,\n  commodity: [],\n  order: [],\n  payedShoppingCart: JSON.parse(localStorage.getItem('payedShoppingCart')) || [],\n  address: [{\n    id: 1,\n    name: \"陈同学\",\n    phone: \"17723757598\",\n    address: \"重庆 开州区 三溪镇xxxx\"\n  }, {\n    id: 2,\n    name: \"陈同学\",\n    phone: \"19967748771\",\n    address: \"广东 茂名市 化州市 杨梅镇 ***\"\n  }]\n};\nconst mutations = {\n  changeStatus: (state, data) => {\n    state.status = data;\n  },\n  unshiftPayedShoppingCart(state, data) {\n    state.payedShoppingCart.unshift(data);\n    localStorage.setItem('payedShoppingCart', JSON.stringify(state.payedShoppingCart));\n  },\n  deletePayedShoppingCart(state, number) {\n    // push,pop,shift,unshift,splice,sort,reverse 这些修改原数组\n    state.payedShoppingCart = state.payedShoppingCart.filter(item => {\n      return item.number != number;\n    });\n    localStorage.setItem('payedShoppingCart', JSON.stringify(state.payedShoppingCart));\n  },\n  addOrderNumber(state, data) {\n    state.order = data;\n    console.log(state.order);\n  },\n  orderList(state, data) {\n    state.commodity = data;\n  }\n};\nconst actions = {\n  unshiftPayedShoppingCart(_ref, data) {\n    let {\n      commit\n    } = _ref;\n    commit('unshiftPayedShoppingCart', data);\n  },\n  deletePayedShoppingCart(_ref2, number) {\n    let {\n      commit\n    } = _ref2;\n    commit('deletePayedShoppingCart', number);\n  },\n  addOrderNumber(_ref3, data) {\n    let {\n      commit\n    } = _ref3;\n    commit('addOrderNumber', data);\n  },\n  orderList(_ref4, data) {\n    let {\n      commit\n    } = _ref4;\n    commit('orderList', data);\n  },\n  /**\r\n   * 登录\r\n   * @param {Object} param0 \r\n   * @param {Boolean} data \r\n   */\n  login(_ref5, data) {\n    let {\n      commit\n    } = _ref5;\n    commit('changeStatus', data);\n  },\n  /**\r\n   * 检测用户是否登录\r\n   * @param {Object} param0 \r\n   * @returns {Promise}\r\n   */\n  check(_ref6) {\n    let {\n      state\n    } = _ref6;\n    return new Promise(resolve => {\n      if (state.login) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    });\n  }\n};\nconst getters = {\n  getLogin(state) {\n    return state.login;\n  }\n};\nexport default {\n  namespaced: true,\n  //开启名命空间\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["state","status","authorization","localStorage","getItem","login","JSON","parse","commodity","order","payedShoppingCart","address","id","name","phone","mutations","changeStatus","data","unshiftPayedShoppingCart","unshift","setItem","stringify","deletePayedShoppingCart","number","filter","item","addOrderNumber","console","log","orderList","actions","_ref","commit","_ref2","_ref3","_ref4","_ref5","check","_ref6","Promise","resolve","getters","getLogin","namespaced"],"sources":["D:/WYKS2python/musicstore/src/store/modules/user.js"],"sourcesContent":["const state = {\r\n    status:false,\r\n    authorization:localStorage.getItem('authorization') || '',\r\n    login:JSON.parse(localStorage.getItem('login')) || false,\r\n    commodity:[],\r\n    order:[],\r\n    payedShoppingCart:JSON.parse(localStorage.getItem('payedShoppingCart')) || [],\r\n    address:[\r\n        {\r\n            id: 1,\r\n            name: \"陈同学\",\r\n            phone: \"17723757598\",\r\n            address: \"重庆 开州区 三溪镇xxxx\"\r\n          },\r\n        {\r\n            id: 2,\r\n            name: \"陈同学\",\r\n            phone: \"19967748771\",\r\n            address: \"广东 茂名市 化州市 杨梅镇 ***\"\r\n        }\r\n    ]\r\n}\r\nconst mutations = {\r\n    changeStatus:(state,data) => {\r\n        state.status = data\r\n    },\r\n    unshiftPayedShoppingCart(state,data){\r\n        state.payedShoppingCart.unshift(data)\r\n        localStorage.setItem('payedShoppingCart',JSON.stringify(state.payedShoppingCart))\r\n    },\r\n    deletePayedShoppingCart(state,number){\r\n        // push,pop,shift,unshift,splice,sort,reverse 这些修改原数组\r\n        state.payedShoppingCart = state.payedShoppingCart.filter(item => {\r\n            return item.number != number\r\n        });\r\n        localStorage.setItem('payedShoppingCart',JSON.stringify(state.payedShoppingCart))\r\n    },\r\n    addOrderNumber(state, data){\r\n        state.order = data\r\n        console.log(state.order);\r\n    },\r\n    orderList(state, data){\r\n        state.commodity = data\r\n    }\r\n}\r\nconst actions = {\r\n    unshiftPayedShoppingCart({commit},data){\r\n        commit('unshiftPayedShoppingCart',data)\r\n    },\r\n    deletePayedShoppingCart({commit},number){\r\n        commit('deletePayedShoppingCart',number)\r\n    },\r\n    addOrderNumber({commit}, data){\r\n        commit('addOrderNumber', data)\r\n    },\r\n    orderList({commit},data){\r\n        commit('orderList',data)\r\n    },\r\n    /**\r\n     * 登录\r\n     * @param {Object} param0 \r\n     * @param {Boolean} data \r\n     */\r\n    login({commit}, data) {\r\n        commit('changeStatus', data)\r\n    },\r\n\r\n    /**\r\n     * 检测用户是否登录\r\n     * @param {Object} param0 \r\n     * @returns {Promise}\r\n     */\r\n    check({state}) {\r\n        return new Promise((resolve) => {\r\n            if (state.login) {\r\n                resolve(true)\r\n            } else {        \r\n                resolve(false)\r\n            }\r\n        })\r\n    }\r\n}\r\nconst getters = {\r\n    getLogin(state){\r\n        return state.login\r\n    }\r\n}\r\nexport default {\r\n    namespaced: true,//开启名命空间\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACVC,MAAM,EAAC,KAAK;EACZC,aAAa,EAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;EACzDC,KAAK,EAACC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EACxDI,SAAS,EAAC,EAAE;EACZC,KAAK,EAAC,EAAE;EACRC,iBAAiB,EAACJ,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,EAAE;EAC7EO,OAAO,EAAC,CACJ;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,aAAa;IACpBH,OAAO,EAAE;EACX,CAAC,EACH;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,aAAa;IACpBH,OAAO,EAAE;EACb,CAAC;AAET,CAAC;AACD,MAAMI,SAAS,GAAG;EACdC,YAAY,EAACA,CAAChB,KAAK,EAACiB,IAAI,KAAK;IACzBjB,KAAK,CAACC,MAAM,GAAGgB,IAAI;EACvB,CAAC;EACDC,wBAAwBA,CAAClB,KAAK,EAACiB,IAAI,EAAC;IAChCjB,KAAK,CAACU,iBAAiB,CAACS,OAAO,CAACF,IAAI,CAAC;IACrCd,YAAY,CAACiB,OAAO,CAAC,mBAAmB,EAACd,IAAI,CAACe,SAAS,CAACrB,KAAK,CAACU,iBAAiB,CAAC,CAAC;EACrF,CAAC;EACDY,uBAAuBA,CAACtB,KAAK,EAACuB,MAAM,EAAC;IACjC;IACAvB,KAAK,CAACU,iBAAiB,GAAGV,KAAK,CAACU,iBAAiB,CAACc,MAAM,CAACC,IAAI,IAAI;MAC7D,OAAOA,IAAI,CAACF,MAAM,IAAIA,MAAM;IAChC,CAAC,CAAC;IACFpB,YAAY,CAACiB,OAAO,CAAC,mBAAmB,EAACd,IAAI,CAACe,SAAS,CAACrB,KAAK,CAACU,iBAAiB,CAAC,CAAC;EACrF,CAAC;EACDgB,cAAcA,CAAC1B,KAAK,EAAEiB,IAAI,EAAC;IACvBjB,KAAK,CAACS,KAAK,GAAGQ,IAAI;IAClBU,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAACS,KAAK,CAAC;EAC5B,CAAC;EACDoB,SAASA,CAAC7B,KAAK,EAAEiB,IAAI,EAAC;IAClBjB,KAAK,CAACQ,SAAS,GAAGS,IAAI;EAC1B;AACJ,CAAC;AACD,MAAMa,OAAO,GAAG;EACZZ,wBAAwBA,CAAAa,IAAA,EAAUd,IAAI,EAAC;IAAA,IAAd;MAACe;IAAM,CAAC,GAAAD,IAAA;IAC7BC,MAAM,CAAC,0BAA0B,EAACf,IAAI,CAAC;EAC3C,CAAC;EACDK,uBAAuBA,CAAAW,KAAA,EAAUV,MAAM,EAAC;IAAA,IAAhB;MAACS;IAAM,CAAC,GAAAC,KAAA;IAC5BD,MAAM,CAAC,yBAAyB,EAACT,MAAM,CAAC;EAC5C,CAAC;EACDG,cAAcA,CAAAQ,KAAA,EAAWjB,IAAI,EAAC;IAAA,IAAf;MAACe;IAAM,CAAC,GAAAE,KAAA;IACnBF,MAAM,CAAC,gBAAgB,EAAEf,IAAI,CAAC;EAClC,CAAC;EACDY,SAASA,CAAAM,KAAA,EAAUlB,IAAI,EAAC;IAAA,IAAd;MAACe;IAAM,CAAC,GAAAG,KAAA;IACdH,MAAM,CAAC,WAAW,EAACf,IAAI,CAAC;EAC5B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIZ,KAAKA,CAAA+B,KAAA,EAAWnB,IAAI,EAAE;IAAA,IAAhB;MAACe;IAAM,CAAC,GAAAI,KAAA;IACVJ,MAAM,CAAC,cAAc,EAAEf,IAAI,CAAC;EAChC,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIoB,KAAKA,CAAAC,KAAA,EAAU;IAAA,IAAT;MAACtC;IAAK,CAAC,GAAAsC,KAAA;IACT,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC5B,IAAIxC,KAAK,CAACK,KAAK,EAAE;QACbmC,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,MAAM;QACHA,OAAO,CAAC,KAAK,CAAC;MAClB;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AACD,MAAMC,OAAO,GAAG;EACZC,QAAQA,CAAC1C,KAAK,EAAC;IACX,OAAOA,KAAK,CAACK,KAAK;EACtB;AACJ,CAAC;AACD,eAAe;EACXsC,UAAU,EAAE,IAAI;EAAC;EACjB3C,KAAK;EACLe,SAAS;EACTe,OAAO;EACPW;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}