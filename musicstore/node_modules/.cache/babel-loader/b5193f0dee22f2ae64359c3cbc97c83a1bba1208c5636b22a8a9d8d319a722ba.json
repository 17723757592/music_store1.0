{"ast":null,"code":"import getToken from '@/api/login';\nimport userRegister from '@/api/register';\nimport { mapMutations } from 'vuex';\n// import {mapState} from 'vuex'\n\nexport default {\n  name: 'LoginName',\n  data() {\n    return {\n      form: {\n        name: '',\n        pwd: '',\n        region: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '90px'\n      // check:''\n    };\n  },\n\n  methods: {\n    ...mapMutations('user', ['changeStatus']),\n    async addUser() {\n      await userRegister(this.form).then(res => {\n        console.log(res);\n      });\n      // let check = localStorage.getItem(this.form.name) || ''\n      // if(this.check){\n      //   this.$message({\n      //   showClose: true,\n      //   message: '该用户已注册，请登录',\n      //   type: 'error'\n      //   });\n      //   return 0 \n      // }\n      this.$message({\n        showClose: true,\n        message: '恭喜你，注册成功',\n        type: 'success'\n      });\n    },\n    success() {\n      this.visible = false;\n      this.$store.state.user.login = true;\n      // 需要将状态存到浏览器，不然刷新会回到未登录状态\n      localStorage.setItem('login', true);\n      localStorage.setItem('authorization', this.$store.state.user.authorization);\n      this.$message({\n        showClose: true,\n        message: '登录成功',\n        type: 'success'\n      });\n    },\n    errorPwd() {\n      this.$message({\n        showClose: true,\n        message: '用户名或密码错误',\n        type: 'error'\n      });\n    },\n    async login() {\n      await getToken(this.form).then(res => {\n        // 请求用户信息并将信息存放在vuex的user模块\n        this.$store.state.user.authorization = res.data.access_token;\n        // 将refreshToken存放起来token过期会用refreshToken去更新token信息\n        localStorage.setItem('refreshToken', res.data.refresh_token);\n        // userinformation()会获取用户信息\n        this.$store.dispatch('user/userInformation');\n      }).catch(err => {\n        console.log(err);\n      });\n      // let checkuser = localStorage.getItem(this.form.name) || ''\n      // this.$message({\n      //   showClose: true,\n      //   message: '查无此用户',\n      //   type: 'warning'\n      // });\n      Boolean(this.$store.state.user.authorization) == true ? this.success() : this.errorPwd();\n    }\n  },\n  computed: {\n    visible: {\n      get() {\n        //开启了模块化命名\n        return this.$store.state.user.status;\n      },\n      set(val) {\n        this.changeStatus(val);\n      }\n    }\n  },\n  watch: {\n    form: {\n      deep: true,\n      handler(val) {\n        this.form.name = val.name;\n        this.form.pwd = val.pwd;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getToken","userRegister","mapMutations","name","data","form","pwd","region","delivery","type","resource","desc","formLabelWidth","methods","addUser","then","res","console","log","$message","showClose","message","success","visible","$store","state","user","login","localStorage","setItem","authorization","errorPwd","access_token","refresh_token","dispatch","catch","err","Boolean","computed","get","status","set","val","changeStatus","watch","deep","handler"],"sources":["src/login/login.vue"],"sourcesContent":["<template>\r\n  <!-- 登录的页面 -->\r\n    <div>\r\n        <el-dialog title=\"CloudMusicStore-login\" :visible.sync=\"visible\">\r\n          <el-form :model=\"form\" :style=\"{'text-align':'left'}\" >\r\n              <el-form-item label=\"用户名\" :label-width=\"formLabelWidth\">\r\n                  <el-input v-model=\"form.name\" autofocus=\"true\" autocomplete=\"off\" :style=\"{width:'90%'}\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"密码\" :label-width=\"formLabelWidth\">\r\n                  <el-input v-model=\"form.pwd\" show-password autocomplete=\"off\" :style=\"{width:'90%'}\"></el-input>\r\n              </el-form-item>\r\n          </el-form>\r\n          <div slot=\"footer\" class=\"dialog-footer\" :style=\"{'text-align':'center'}\">\r\n            <el-button @click=\"addUser\" >注 册</el-button>  \r\n            <el-button type=\"primary\" @click=\"login\">登 录</el-button>\r\n          </div>\r\n        </el-dialog>  \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport getToken from '@/api/login';\r\nimport userRegister from '@/api/register';\r\nimport { mapMutations } from 'vuex'\r\n// import {mapState} from 'vuex'\r\n\r\nexport default {\r\n    name:'LoginName',\r\n    data() {\r\n      return {\r\n        form: {\r\n          name:'',\r\n          pwd:'',\r\n          region: '',\r\n          delivery: false,\r\n          type: [],\r\n          resource: '',\r\n          desc: ''\r\n        },\r\n        formLabelWidth: '90px',\r\n        // check:''\r\n      };\r\n    },\r\n    methods:{\r\n      ...mapMutations('user',['changeStatus']),\r\n      async addUser(){\r\n        await userRegister(this.form).then(res=>{\r\n          console.log(res)  \r\n        })\r\n        // let check = localStorage.getItem(this.form.name) || ''\r\n        // if(this.check){\r\n        //   this.$message({\r\n        //   showClose: true,\r\n        //   message: '该用户已注册，请登录',\r\n        //   type: 'error'\r\n        //   });\r\n        //   return 0 \r\n        // }\r\n        this.$message({\r\n          showClose: true,\r\n          message: '恭喜你，注册成功',\r\n          type: 'success'\r\n        });\r\n      },\r\n      success(){\r\n        this.visible = false\r\n        this.$store.state.user.login = true\r\n        // 需要将状态存到浏览器，不然刷新会回到未登录状态\r\n        localStorage.setItem('login', true)\r\n        localStorage.setItem('authorization',this.$store.state.user.authorization)\r\n        this.$message({\r\n          showClose: true,\r\n          message: '登录成功',\r\n          type: 'success'\r\n        });\r\n\r\n        \r\n      },\r\n      errorPwd(){\r\n        this.$message({\r\n          showClose: true,\r\n          message: '用户名或密码错误',\r\n          type: 'error'\r\n        });\r\n      },\r\n      async login(){\r\n        await getToken(this.form).then(res=>{\r\n          // 请求用户信息并将信息存放在vuex的user模块\r\n            this.$store.state.user.authorization = res.data.access_token\r\n            // 将refreshToken存放起来token过期会用refreshToken去更新token信息\r\n            localStorage.setItem('refreshToken',res.data.refresh_token)\r\n            // userinformation()会获取用户信息\r\n            this.$store.dispatch('user/userInformation') \r\n        }).catch(err=>{\r\n          console.log(err);\r\n        })\r\n        // let checkuser = localStorage.getItem(this.form.name) || ''\r\n        // this.$message({\r\n        //   showClose: true,\r\n        //   message: '查无此用户',\r\n        //   type: 'warning'\r\n        // });\r\n        Boolean(this.$store.state.user.authorization) == true ? this.success() : this.errorPwd()\r\n      }\r\n    },\r\n    computed:{\r\n      visible:{\r\n        get(){\r\n          //开启了模块化命名\r\n          return this.$store.state.user.status\r\n        },\r\n        set(val){\r\n          this.changeStatus(val)\r\n        }\r\n      },\r\n      \r\n    },\r\n    watch:{\r\n      form:{\r\n        deep:true,\r\n        handler(val){\r\n          this.form.name = val.name\r\n          this.form.pwd = val.pwd\r\n        }\r\n      }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAqBA,OAAAA,QAAA;AACA,OAAAC,YAAA;AACA,SAAAC,YAAA;AACA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAF,IAAA;QACAG,GAAA;QACAC,MAAA;QACAC,QAAA;QACAC,IAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,cAAA;MACA;IACA;EACA;;EACAC,OAAA;IACA,GAAAX,YAAA;IACA,MAAAY,QAAA;MACA,MAAAb,YAAA,MAAAI,IAAA,EAAAU,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAG,QAAA;QACAC,SAAA;QACAC,OAAA;QACAZ,IAAA;MACA;IACA;IACAa,QAAA;MACA,KAAAC,OAAA;MACA,KAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,KAAA;MACA;MACAC,YAAA,CAAAC,OAAA;MACAD,YAAA,CAAAC,OAAA,uBAAAL,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAI,aAAA;MACA,KAAAX,QAAA;QACAC,SAAA;QACAC,OAAA;QACAZ,IAAA;MACA;IAGA;IACAsB,SAAA;MACA,KAAAZ,QAAA;QACAC,SAAA;QACAC,OAAA;QACAZ,IAAA;MACA;IACA;IACA,MAAAkB,MAAA;MACA,MAAA3B,QAAA,MAAAK,IAAA,EAAAU,IAAA,CAAAC,GAAA;QACA;QACA,KAAAQ,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAI,aAAA,GAAAd,GAAA,CAAAZ,IAAA,CAAA4B,YAAA;QACA;QACAJ,YAAA,CAAAC,OAAA,iBAAAb,GAAA,CAAAZ,IAAA,CAAA6B,aAAA;QACA;QACA,KAAAT,MAAA,CAAAU,QAAA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAnB,OAAA,CAAAC,GAAA,CAAAkB,GAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,OAAA,MAAAb,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAI,aAAA,iBAAAR,OAAA,UAAAS,QAAA;IACA;EACA;EACAO,QAAA;IACAf,OAAA;MACAgB,IAAA;QACA;QACA,YAAAf,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAc,MAAA;MACA;MACAC,IAAAC,GAAA;QACA,KAAAC,YAAA,CAAAD,GAAA;MACA;IACA;EAEA;EACAE,KAAA;IACAvC,IAAA;MACAwC,IAAA;MACAC,QAAAJ,GAAA;QACA,KAAArC,IAAA,CAAAF,IAAA,GAAAuC,GAAA,CAAAvC,IAAA;QACA,KAAAE,IAAA,CAAAC,GAAA,GAAAoC,GAAA,CAAApC,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}