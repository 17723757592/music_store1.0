{"ast":null,"code":"const state = {\n  status: false,\n  login: JSON.parse(sessionStorage.getItem('login')) || false,\n  payedShoppingcart: JSON.parse(getItem('payedShoppingCart')) || [],\n  address: [{\n    id: 1,\n    name: \"陈同学\",\n    phone: \"17723757598\",\n    address: \"重庆 开州区 三溪镇xxxx\"\n  }, {\n    id: 2,\n    name: \"陈同学\",\n    phone: \"19967748771\",\n    address: \"广东 茂名市 化州市 杨梅镇 ***\"\n  }]\n};\nconst mutations = {\n  changeStatus: (state, data) => {\n    state.status = data;\n    // sessionStorage.setItem('login',data)\n  },\n\n  unshiftPayedShopingcart(state, data) {\n    state.payedShopingcart.unshift(data);\n    sessionStorage.setItem('payedShoppingcart', JSON.stringify(state.payedShopingcart));\n  }\n};\nconst actions = {\n  unshiftPayedShopingcart(_ref, data) {\n    let {\n      commit\n    } = _ref;\n    commit('unshiftPayedShopingcart', data);\n  },\n  /**\r\n   * 登录\r\n   * @param {Object} param0 \r\n   * @param {Boolean} data \r\n   */\n  login(_ref2, data) {\n    let {\n      commit\n    } = _ref2;\n    commit('changeStatus', data);\n  },\n  /**\r\n   * 检测用户是否登录\r\n   * @param {Object} param0 \r\n   * @returns {Promise}\r\n   */\n  check(_ref3) {\n    let {\n      state\n    } = _ref3;\n    return new Promise(resolve => {\n      if (state.login) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    });\n  }\n};\nconst getters = {\n  getLogin(state) {\n    return state.login;\n  }\n};\nexport default {\n  namespaced: true,\n  //开启名命空间\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["state","status","login","JSON","parse","sessionStorage","getItem","payedShoppingcart","address","id","name","phone","mutations","changeStatus","data","unshiftPayedShopingcart","payedShopingcart","unshift","setItem","stringify","actions","_ref","commit","_ref2","check","_ref3","Promise","resolve","getters","getLogin","namespaced"],"sources":["D:/WYKS2python/musicstore/src/store/modules/user.js"],"sourcesContent":["const state = {\r\n    status:false,\r\n    login:JSON.parse(sessionStorage.getItem('login')) || false,\r\n    payedShoppingcart:JSON.parse(getItem('payedShoppingCart')) || [],\r\n    address:[\r\n        {\r\n            id: 1,\r\n            name: \"陈同学\",\r\n            phone: \"17723757598\",\r\n            address: \"重庆 开州区 三溪镇xxxx\"\r\n          },\r\n        {\r\n            id: 2,\r\n            name: \"陈同学\",\r\n            phone: \"19967748771\",\r\n            address: \"广东 茂名市 化州市 杨梅镇 ***\"\r\n        }\r\n    ]\r\n}\r\nconst mutations = {\r\n    changeStatus:(state,data) => {\r\n        state.status = data\r\n        // sessionStorage.setItem('login',data)\r\n    },\r\n    unshiftPayedShopingcart(state,data){\r\n        state.payedShopingcart.unshift(data)\r\n        sessionStorage.setItem('payedShoppingcart', JSON.stringify(state.payedShopingcart))\r\n    }\r\n}\r\nconst actions = {\r\n    unshiftPayedShopingcart({commit},data){\r\n        commit('unshiftPayedShopingcart',data)\r\n    },\r\n\r\n    /**\r\n     * 登录\r\n     * @param {Object} param0 \r\n     * @param {Boolean} data \r\n     */\r\n    login({commit}, data) {\r\n        commit('changeStatus', data)\r\n    },\r\n\r\n    /**\r\n     * 检测用户是否登录\r\n     * @param {Object} param0 \r\n     * @returns {Promise}\r\n     */\r\n    check({state}) {\r\n        return new Promise((resolve) => {\r\n            if (state.login) {\r\n                resolve(true)\r\n            } else {        \r\n                resolve(false)\r\n            }\r\n        })\r\n    }\r\n}\r\nconst getters = {\r\n    getLogin(state){\r\n        return state.login\r\n    }\r\n}\r\nexport default {\r\n    namespaced: true,//开启名命空间\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACVC,MAAM,EAAC,KAAK;EACZC,KAAK,EAACC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;EAC1DC,iBAAiB,EAACJ,IAAI,CAACC,KAAK,CAACE,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,EAAE;EAChEE,OAAO,EAAC,CACJ;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,aAAa;IACpBH,OAAO,EAAE;EACX,CAAC,EACH;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,aAAa;IACpBH,OAAO,EAAE;EACb,CAAC;AAET,CAAC;AACD,MAAMI,SAAS,GAAG;EACdC,YAAY,EAACA,CAACb,KAAK,EAACc,IAAI,KAAK;IACzBd,KAAK,CAACC,MAAM,GAAGa,IAAI;IACnB;EACJ,CAAC;;EACDC,uBAAuBA,CAACf,KAAK,EAACc,IAAI,EAAC;IAC/Bd,KAAK,CAACgB,gBAAgB,CAACC,OAAO,CAACH,IAAI,CAAC;IACpCT,cAAc,CAACa,OAAO,CAAC,mBAAmB,EAAEf,IAAI,CAACgB,SAAS,CAACnB,KAAK,CAACgB,gBAAgB,CAAC,CAAC;EACvF;AACJ,CAAC;AACD,MAAMI,OAAO,GAAG;EACZL,uBAAuBA,CAAAM,IAAA,EAAUP,IAAI,EAAC;IAAA,IAAd;MAACQ;IAAM,CAAC,GAAAD,IAAA;IAC5BC,MAAM,CAAC,yBAAyB,EAACR,IAAI,CAAC;EAC1C,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIZ,KAAKA,CAAAqB,KAAA,EAAWT,IAAI,EAAE;IAAA,IAAhB;MAACQ;IAAM,CAAC,GAAAC,KAAA;IACVD,MAAM,CAAC,cAAc,EAAER,IAAI,CAAC;EAChC,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIU,KAAKA,CAAAC,KAAA,EAAU;IAAA,IAAT;MAACzB;IAAK,CAAC,GAAAyB,KAAA;IACT,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC5B,IAAI3B,KAAK,CAACE,KAAK,EAAE;QACbyB,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,MAAM;QACHA,OAAO,CAAC,KAAK,CAAC;MAClB;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AACD,MAAMC,OAAO,GAAG;EACZC,QAAQA,CAAC7B,KAAK,EAAC;IACX,OAAOA,KAAK,CAACE,KAAK;EACtB;AACJ,CAAC;AACD,eAAe;EACX4B,UAAU,EAAE,IAAI;EAAC;EACjB9B,KAAK;EACLY,SAAS;EACTQ,OAAO;EACPQ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}